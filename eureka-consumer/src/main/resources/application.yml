server:
  port: 7001

spring:
  application:
    name: eureka-consumer
  main:
    allow-bean-definition-overriding: true

eureka:
  client:
    # 注册实例信息的服务治理中心地址
    serviceUrl:
      defaultZone: http://localhost:5001/eureka/,http://localhost:5002/eureka/,http://localhost:5003/eureka/

  instance:
    hostname: eureka-service-name
    # 表从eureka服务器注册表中获取注册信息的时间间隔（s），默认为30秒。 如果要迅速获取服务注册状态，可以缩小该值
    lease-renewal-interval-in-seconds: 5
    # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
    # 默认总共为90秒, 一次30秒
    # 如果该值太大，则很可能将流量转发过去的时候，该实例已经不存活了。
    # 如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
    # 该值至少应该大于 leaseRenewalIntervalInSeconds
    lease-expiration-duration-in-seconds: 10

# 指定哪个模块， 使用哪种负载均衡策略。 经测试不添加此配置也可以，
#server-client:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #随机
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ZoneAvoidanceRule #轮询
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule #重试
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule #响应时间
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ZoneAvoidanceRule #复合
